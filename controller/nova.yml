- name: Install Nova Api
  hosts: controller
  user: root
  tasks:
    - name: Run nova init DB scripts
      script: scripts/nova-init-db.sh
      register: nova_init_db
      when:
        - not ansible_local['openstack']['nova'].get('db')

    - name: Set the Nova local facts
      ini_file:
        dest: "/etc/ansible/facts.d/openstack.fact"
        section: nova
        option: db
        value: 1

    - name: Run nova init scripts
      script: scripts/nova-init.sh
      register: nova_init
      when:
        - not ansible_local['openstack']['nova'].get('user')

    - name: Set the Nova local facts
      ini_file:
        dest: "/etc/ansible/facts.d/openstack.fact"
        section: nova
        option: user
        value: 1

    - name: Replace Nova config file
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - src: nova/nova.conf.j2
          dest: /etc/nova/nova.conf
        - src: httpd/conf.d/00-nova-placement-api.conf.j2
          dest: /etc/httpd/conf.d/00-nova-placement-api.conf
      register: result

    - name: Restart HTTP server
      service: name=httpd state=restarted enabled=yes
      when: result.changed

    - name: Perform a Nova DB sync
      command: "{{ item }}"
      with_items:
        - nova-manage api_db sync
        - nova-manage cell_v2 map_cell0
        - nova-manage cell_v2 create_cell --name=cell1 --verbose
        - nova-manage db sync
      when:
        - not ansible_local['openstack']['nova'].get('db_sync', 0)

    - name: Set the Nova local facts
      ini_file:
        dest: "/etc/ansible/facts.d/openstack.fact"
        section: nova
        option: "db_sync"
        value: "yes"

    - name: Start Nova service
      service: name="{{ item }}" state=restarted enabled=yes
      with_items:
        - openstack-nova-api
        - openstack-nova-console
        - openstack-nova-consoleauth
        - openstack-nova-scheduler
        - openstack-nova-conductor
        - openstack-nova-novncproxy
  vars:
    management_ip: "{{ ansible_host }}"
